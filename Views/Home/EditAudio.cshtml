@inject IHttpContextAccessor HttpContextAccessor

@{
    var host = HttpContextAccessor.HttpContext.Request.Host.ToString();
    var scheme = HttpContextAccessor.HttpContext.Request.Scheme;
    var subtitleUrl = $"{scheme}://{host}/Subtitles";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Audio with Subtitles</title>
    <script src="https://unpkg.com/wavesurfer.js"></script>
    <style>
        .subtitleDisplay {
            position: absolute;
            bottom: 20px;
            width: 90%;
            text-align: center;
            font-size: 20px;
            background-color: rgba(0, 0, 0, 0.7);
            color: white;
            padding: 10px;
            box-sizing: border-box;
        }

        #waveFormContainer {
            background-color: #FFB735;
        }

        #waveform {
            padding: 20px 20px 0 20px;
        }

        .playPauseContainer {
            background-color: #FFB735;
            width: 40px;
            height: 40px;
            display: flex;
            justify-content: center;
            align-items: center;
            border-radius: 50%;
        }

        .playPauseContainer:active {
                background-color: #e6a530;
        }

        .playPauseContainer:hover {
            cursor: pointer;
        }

        .timeLabels {
            display: flex;
            justify-content: space-between;
            padding: 0 10px;
            font-size: 12px;
            color: #987231;
            font-weight: bold;
            margin-top: 5px;
        }

        #startTime {
            text-align: left;
        }

        #endTime {
            text-align: right;
        }
    </style>
</head>
<body>
    <div style="margin-top: 200px;">
        @* <audio id="audioPlayer" controls>
            <source src="~/Audios/Yakuza.mp3" type="audio/mpeg" />
        </audio> *@
        <div class="subtitleDisplay"></div>
        <div>
            <div class="playPauseContainer">
                <svg height="20px" id="play" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512">
                    <path fill="white" d="M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80L0 432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z" />
                </svg>

                <svg class="d-none" height="20px" id="pause" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512">
                    <path fill="white" d="M48 64C21.5 64 0 85.5 0 112L0 400c0 26.5 21.5 48 48 48l32 0c26.5 0 48-21.5 48-48l0-288c0-26.5-21.5-48-48-48L48 64zm192 0c-26.5 0-48 21.5-48 48l0 288c0 26.5 21.5 48 48 48l32 0c26.5 0 48-21.5 48-48l0-288c0-26.5-21.5-48-48-48l-32 0z" />
                </svg>

            </div>
            @* <button id="playWaveForm" class="btn btn-primary">Play/Pause</button> *@
        </div>
        <label>
            Zoom: <input type="range" min="10" max="1000" value="100" />
        </label>
        <label>
            Volume: <input type="range" min="0" max="1" step="0.01" id="volumeSlider" value="1" />
        </label>

        <div id="waveFormContainer">
            <div id="waveform">
                <!-- the waveform will be rendered here -->
            </div>
            <div id="waveform-timeline"></div>
            <div class="timeLabels">
                <span id="startTime">00:00</span>
                <span id="endTime">00:00</span>
            </div>
            @* <span>Hey</span> *@
        </div>
    </div>
    @* <script src="https://player.vimeo.com/api/player.js"></script> *@
    <script asp-append-version="true" src="~/js/waveform.js" type="module"></script>
    <script src="https://unpkg.com/wavesurfer.js/dist/plugin/wavesurfer.timeline.min.js"></script>

    <script>
        const videoElement = document.createElement('video');
        videoElement.src = 'https://vimeo.com/990565046';

        // const audioContext = new AudioContext();
        // const source = audioContext.createMediaElementSource(videoElement);
        // source.connect(audioContext.destination);

        var cues = [];
        const subtitleDisplay = document.querySelector('.subtitleDisplay');
        function loadSubtitles(url) {
            fetch(url)
                .then(response => response.text())
                .then(text => {
                    cues = parseVTT(text);
                    displaySubtitles(cues);
                })
                .catch(error => console.error('Error loading subtitles:', error));
        }

        function parseVTT(vttText) {
            const lines = vttText.split('\n');
            let cues = [];
            let cue = null;

            lines.forEach(line => {
                if (line.includes('-->')) {
                    if (cue) cues.push(cue);
                    const [start, end] = line.split(' --> ');
                    cue = { start: timeToSeconds(start), end: timeToSeconds(end), text: '' };
                } else if (cue && line.trim()) {
                    cue.text += line.trim() + '\n';
                }
            });

            if (cue) cues.push(cue);
            return cues;
        }

        function timeToSeconds(time) {
            const parts = time.split(':');
            const seconds = parseFloat(parts[2]);
            const minutes = parseInt(parts[1], 10);
            const hours = parseInt(parts[0], 10);
            return seconds + (minutes * 60) + (hours * 3600);
        }

        function displaySubtitles(cues) {
            const audio = document.getElementById('audioPlayer');

            audio.addEventListener('timeupdate', () => {
                const currentTime = audio.currentTime;
                const currentCue = cues.find(cue => currentTime >= cue.start && currentTime <= cue.end);

                if (currentCue) {
                    subtitleDisplay.innerText = currentCue.text;
                } else {
                    subtitleDisplay.id = "";
                    subtitleDisplay.innerText = '';
                }
            });
        }
        
    </script>
</body>
</html>